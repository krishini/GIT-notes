git config user.name "mi_usuario"

git config --local user.name "nombreLocal"
git config --global user.name "nombredeusuarioglobal"
git confog --local user.email "123456778+nombredeusuario@users.noreply.github.com"

<!-- este alias esta en settings cuando pongo que mi mail sea privado -->
git config user.name
<!-- me muestra como es mi alias -->
git config user.email

<!-- para pasar untracked files a staging -->
git add nombreDeArchivo
git add . 

para crear un template
git config --local commit.template ~/.gitmessage
me va a agregar una netrada en .git/config 
algo asi:
[commit]
        template = /Users/uma/.gitmessage

-
despues tenes que ir a crear manualmente el archivo .gitmessage y armar el template como mas te guste

cuando corras git commit el envabezado va a incluir ese template por is te gusta 
-

gh repo list 
para ver todos los repositorios que tengo en mi cuenta de github
---
me clono un repo
hago los ajustes que necesite
git add
git commit
git push

y eso es lo básico
-----
con este articulo solucione el problemita que se me genero cuando cree cosas usando mi email publico y luego cambie esa setting y quise seguir pusheando al mismo repositorio

When enabling the “Block command line pushes that expose my email” feature, you’ll also want to configure Git to use your no-reply email address. Don’t worry—this won’t affect your contribution graph. All commits will still be associated with your account.

    Open Terminal.

    Change the current working directory to the local repository where you want to configure the email address that you associate with your Git commits.

    Find your GitHub noreply address in your GitHub's Personal Settings → Emails. It's mentioned in the description of the Keep my email address private checkbox. Usually, it starts with a unique identifier, plus your username.

    Set an email address in Git. Use your GitHub-provided no-reply email address.

        Setting your email address for every repository on your computer

        git config --global user.email "{ID}+{username}@users.noreply.github.com"

        Setting your email address for a single repository

        git config user.email "{ID}+{username}@users.noreply.github.com"

    Reset the author information on your last commit:

    git commit --amend --reset-author

    If you have multiple commits with your private e-mail address, see this answer.

    Now you can push the commit with the noreply e-mail address, and future commits will have the noreply e-mail address as well.

    git push

Once you configure Git, commits will use your alternate “noreply” email address, and any pushes that don’t will be rejected.

---